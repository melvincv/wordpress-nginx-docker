# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name wp.awsl.melvincv.com;
    return 301 https://$host$request_uri;
}

# HTTPS Server Block
server {
    listen 443 ssl; # listen on port 443 with SSL enabled
    listen [::]:443 ssl; # for IPv6 support
    http2 on;

    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
    include ssl-params.conf;

    server_name wp.awsl.melvincv.com;
    root /var/www/html;
    index index.php;

    # Apply Rate Limiting
    # https://www.freecodecamp.org/news/nginx-rate-limiting-in-a-nutshell-128fe9e0126c
    # Burst: Allow zone limit + 50 r/s, connection waits instead of reject
    # nodelay: serve the burst requests as fast as possible, but apply the rate limit after this.
    limit_req zone=MYZONE burst=50 nodelay;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }
	
	rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    location ~ [^/]\.php(/|$) { 
		fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		if (!-f $document_root$fastcgi_script_name) {
			return 404;
		}

		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO       $fastcgi_path_info;
		fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;

		fastcgi_pass   wp:9000;
		fastcgi_index  index.php;
	}
    location ~* \.(gif|jpg|jpeg|png|svg|css|js|ico)$ {
        add_header Cache-Control "public"; # resource can be cached by any cache
        expires 1d; # cache expires in 1 day
        etag on; # browser check if the resource has changed since it was last cached
        add_header Vary Accept-Encoding; # if the browser supports gzip compression by nginx, it is used
    }
}
